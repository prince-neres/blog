{"ast":null,"code":"var _jsxFileName = \"/home/prince.neres/blog/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/login/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history.push(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const registerUser = async (username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password2\n      })\n    });\n\n    if (response.status === 201) {\n      history.push(\"/login\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/\");\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"q3EasiboqB+z+ZA8e/96F09mD4I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/prince.neres/blog/frontend/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useHistory","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","username","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","push","alert","registerUser","password2","logoutUser","removeItem","contextData"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/login/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history.push(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n  \n  const registerUser = async (username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password2\n      })\n    });\n    if (response.status === 201) {\n      history.push(\"/login\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/\");\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}