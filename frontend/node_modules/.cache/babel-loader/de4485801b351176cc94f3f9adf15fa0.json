{"ast":null,"code":"var _jsxFileName = \"/home/prince/\\xC1rea de Trabalho/blog/frontend/src/views/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from \"../context/AuthContext\";\nimport axios from 'axios';\nimport '../styles/PostForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const postId = match.params.id;\n  const {\n    user\n  } = useContext(AuthContext);\n  const [post, setPost] = useState({\n    title: '',\n    content: '',\n    image: null\n  });\n  useEffect(() => {\n    getNote();\n  }, []);\n\n  let getNote = () => {\n    if (postId === undefined) return;\n    axios.get(`http://localhost:8000/posts/${postId}`).then(res => {\n      const post = res.data;\n      setPost(post);\n      console.log(post);\n    });\n  };\n\n  let handleChange = e => setPost({ ...post,\n    [e.target.id]: e.target.value\n  });\n\n  let handleImageChange = e => setPost({ ...post,\n    image: e.target.files[0]\n  });\n\n  function validate_image(img) {\n    var pattern = /^http:\\/\\//i;\n\n    if (pattern.test(img)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  let createPost = async () => {\n    let formData = new FormData();\n    post.image ? formData.append('image', post.image, post.image.name) : console.log('não tem');\n    formData.append('title', post.title);\n    formData.append('content', post.content);\n    formData.append('user', user.user_id);\n    let url = 'http://localhost:8000/posts/';\n    axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    history.push('/posts');\n  };\n\n  let updatePost = async () => {\n    let formData = new FormData();\n    post.image ? validate_image(post.image) ? console.log('tem') : formData.append('image', post.image, post.image.name) : console.log('não tem');\n    formData.append('title', post.title);\n    formData.append('content', post.content);\n    formData.append('user', user.user_id);\n    let url = `http://localhost:8000/posts/${postId}/`;\n    axios.put(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    history.push('/posts');\n  };\n\n  let deletePost = async () => {\n    postId ? axios.delete(`http://localhost:8000/posts/${postId}`, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(history.push('/posts')) : history.push('/posts');\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    postId ? updatePost() : createPost();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Tit\\xFAlo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        id: \"title\",\n        value: post.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"Conte\\xFAdo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Content\",\n        id: \"content\",\n        value: post.content,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Imagem:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        accept: \"image/png, image/jpeg\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Submit\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"VZIK9xHGXwFmV3aVFNA82m5mmIQ=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/prince/Área de Trabalho/blog/frontend/src/views/PostForm.js"],"names":["React","useState","useContext","useEffect","AuthContext","axios","PostForm","match","history","postId","params","id","user","post","setPost","title","content","image","getNote","undefined","get","then","res","data","console","log","handleChange","e","target","value","handleImageChange","files","validate_image","img","pattern","test","createPost","formData","FormData","append","name","user_id","url","headers","push","updatePost","put","deletePost","delete","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AACvC,QAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWV,UAAU,CAACE,WAAD,CAA3B;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC/Bc,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE,EAFsB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,OAAO,GAAG,MAAM;AAClB,QAAIT,MAAM,KAAKU,SAAf,EAA0B;AAC1Bd,IAAAA,KAAK,CAACe,GAAN,CAAW,+BAA8BX,MAAO,EAAhD,EACGY,IADH,CACQC,GAAG,IAAI;AACX,YAAMT,IAAI,GAAGS,GAAG,CAACC,IAAjB;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,KALH;AAMD,GARD;;AAUA,MAAIa,YAAY,GAAIC,CAAD,IACjBb,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,KAACc,CAAC,CAACC,MAAF,CAASjB,EAAV,GAAegB,CAAC,CAACC,MAAF,CAASC;AAFlB,GAAD,CADT;;AAMA,MAAIC,iBAAiB,GAAIH,CAAD,IACtBb,OAAO,CAAC,EACN,GAAGD,IADG;AAENI,IAAAA,KAAK,EAAEU,CAAC,CAACC,MAAF,CAASG,KAAT,CAAe,CAAf;AAFD,GAAD,CADT;;AAMA,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,QAAIC,OAAO,GAAG,aAAd;;AAEA,QAAIA,OAAO,CAACC,IAAR,CAAaF,GAAb,CAAJ,EAAuB;AACrB,aAAO,IAAP;AACD,KAFD,MAGK;AACH,aAAO,KAAP;AACD;AACF;;AAED,MAAIG,UAAU,GAAG,YAAY;AAC3B,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAzB,IAAAA,IAAI,CAACI,KAAL,GAAaoB,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1B,IAAI,CAACI,KAA9B,EAAqCJ,IAAI,CAACI,KAAL,CAAWuB,IAAhD,CAAb,GAAqEhB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAArE;AACAY,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1B,IAAI,CAACE,KAA9B;AACAsB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B1B,IAAI,CAACG,OAAhC;AACAqB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3B,IAAI,CAAC6B,OAA7B;AACA,QAAIC,GAAG,GAAG,8BAAV;AACArC,IAAAA,KAAK,CAACQ,IAAN,CAAW6B,GAAX,EAAgBL,QAAhB,EAA0B;AACxBM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADe,KAA1B;AAKAnC,IAAAA,OAAO,CAACoC,IAAR,CAAa,QAAb;AACD,GAbD;;AAeA,MAAIC,UAAU,GAAG,YAAY;AAC3B,QAAIR,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAzB,IAAAA,IAAI,CAACI,KAAL,GACAe,cAAc,CAACnB,IAAI,CAACI,KAAN,CAAd,GAA6BO,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA7B,GAAkDY,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1B,IAAI,CAACI,KAA9B,EAAqCJ,IAAI,CAACI,KAAL,CAAWuB,IAAhD,CADlD,GAEEhB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAFF;AAGAY,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1B,IAAI,CAACE,KAA9B;AACAsB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B1B,IAAI,CAACG,OAAhC;AACAqB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3B,IAAI,CAAC6B,OAA7B;AACA,QAAIC,GAAG,GAAI,+BAA8BjC,MAAO,GAAhD;AACAJ,IAAAA,KAAK,CAACyC,GAAN,CAAUJ,GAAV,EAAeL,QAAf,EAAyB;AACvBM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADc,KAAzB;AAKAnC,IAAAA,OAAO,CAACoC,IAAR,CAAa,QAAb;AACD,GAfD;;AAiBA,MAAIG,UAAU,GAAG,YAAY;AAC3BtC,IAAAA,MAAM,GAAGJ,KAAK,CAAC2C,MAAN,CAAc,+BAA8BvC,MAAO,EAAnD,EAAsD;AAC7DkC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADoD,KAAtD,EAINtB,IAJM,CAIDb,OAAO,CAACoC,IAAR,CAAa,QAAb,CAJC,CAAH,GAKJpC,OAAO,CAACoC,IAAR,CAAa,QAAb,CALF;AAMD,GAPD;;AASA,MAAIK,YAAY,GAAItB,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACuB,cAAF;AACAzC,IAAAA,MAAM,GAAGoC,UAAU,EAAb,GAAkBT,UAAU,EAAlC;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,EAAE,EAAC,OAA1C;AAAkD,QAAA,KAAK,EAAEpC,IAAI,CAACE,KAA9D;AAAqE,QAAA,QAAQ,EAAEW,YAA/E;AAA6F,QAAA,QAAQ;AAArG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,EAAE,EAAC,SAA5C;AAAsD,QAAA,KAAK,EAAEb,IAAI,CAACG,OAAlE;AAA2E,QAAA,QAAQ,EAAEU;AAArF;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,GAAG,EAAEb,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,MAAM,EAAC,uBAAtC;AAA8D,QAAA,QAAQ,EAAEa;AAAxE;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEiB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/GD;;GAAMzC,Q;;KAAAA,Q;AAiHN,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from \"../context/AuthContext\";\nimport axios from 'axios';\nimport '../styles/PostForm.css'\n\nconst PostForm = ({ match, history }) => {\n  const postId = match.params.id\n  const { user } = useContext(AuthContext);\n\n  const [post, setPost] = useState({\n    title: '',\n    content: '',\n    image: null,\n  })\n\n  useEffect(() => {\n    getNote()\n  }, [])\n\n  let getNote = () => {\n    if (postId === undefined) return\n    axios.get(`http://localhost:8000/posts/${postId}`)\n      .then(res => {\n        const post = res.data\n        setPost(post)\n        console.log(post)\n      })\n  }\n\n  let handleChange = (e) =>\n    setPost({\n      ...post,\n      [e.target.id]: e.target.value\n    })\n\n  let handleImageChange = (e) =>\n    setPost({\n      ...post,\n      image: e.target.files[0]\n    })\n  \n  function validate_image(img) {\n    var pattern = /^http:\\/\\//i;\n\n    if (pattern.test(img)) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  let createPost = async () => {\n    let formData = new FormData();\n    post.image ? formData.append('image', post.image, post.image.name) : console.log('não tem')\n    formData.append('title', post.title);\n    formData.append('content', post.content);\n    formData.append('user', user.user_id);\n    let url = 'http://localhost:8000/posts/';\n    axios.post(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n    history.push('/posts')\n  }\n\n  let updatePost = async () => {\n    let formData = new FormData();\n    post.image ? \n    validate_image(post.image) ? console.log('tem') : formData.append('image', post.image, post.image.name)\n    : console.log('não tem')\n    formData.append('title', post.title);\n    formData.append('content', post.content);\n    formData.append('user', user.user_id);\n    let url = `http://localhost:8000/posts/${postId}/`;\n    axios.put(url, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n    history.push('/posts')\n  }\n\n  let deletePost = async () => {\n    postId ? axios.delete(`http://localhost:8000/posts/${postId}`, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(history.push('/posts')) \n    : history.push('/posts')\n  }\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    postId ? updatePost() : createPost()\n  };\n\n\n  return (\n    <div className='PostForm'>\n      <form onSubmit={handleSubmit}>\n          <label htmlFor=\"title\">Titúlo:</label>\n          <input type=\"text\" placeholder='Title' id='title' value={post.title} onChange={handleChange} required />\n          <label htmlFor=\"content\">Conteúdo:</label>\n          <input type=\"text\" placeholder='Content' id='content' value={post.content} onChange={handleChange} />\n          <label htmlFor=\"image\">Imagem:</label>\n          <img src={post.image} />\n          <input type=\"file\"  id=\"image\" accept=\"image/png, image/jpeg\" onChange={handleImageChange} />\n          <p>\n            <button onClick={deletePost}>Delete</button>\n            <input className='Submit' type=\"submit\" />\n          </p>\n      </form>\n    </div>\n  );\n}\n\nexport default PostForm"]},"metadata":{},"sourceType":"module"}